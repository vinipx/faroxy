plugins {
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'application'
    id 'maven-publish'
}

group = 'io.faroxy'
version = '1.3.0'
sourceCompatibility = '17'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withJavadocJar()
    withSourcesJar()
}

application {
    mainClass = 'io.faroxy.FaroxyServerApplication'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars:bootstrap:5.3.2'
    implementation 'org.webjars:jquery:3.7.1'
    implementation 'org.webjars:sockjs-client:1.5.1'
    implementation 'org.webjars:stomp-websocket:2.3.4'
    implementation 'org.webjars.npm:vue:3.3.4'
    implementation 'org.webjars.npm:json-formatter-js:2.3.4'
    implementation 'org.controlsfx:controlsfx:11.1.2'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'com.h2database:h2'
    
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.8.0'
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/vinipx/faroxy")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
            pom {
                name = 'Faroxy'
                description = 'A modern HTTP proxy server with real-time traffic monitoring and analysis capabilities'
                url = 'https://github.com/vinipx/faroxy'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'vinipx'
                        name = 'vinipx'
                        email = 'your.email@example.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/vinipx/faroxy.git'
                    developerConnection = 'scm:git:ssh://github.com/vinipx/faroxy.git'
                    url = 'https://github.com/vinipx/faroxy'
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
    jvmArgs = [
        '--add-opens=java.base/java.lang=ALL-UNNAMED',
        '--add-opens=java.base/java.util=ALL-UNNAMED'
    ]
}

run {
    systemProperty "java.awt.headless", "false"
    systemProperty "prism.verbose", "true"
    systemProperty "prism.order", "sw"
    systemProperty "prism.text", "t2k"
    jvmArgs = [
        '--add-opens=java.base/java.lang=ALL-UNNAMED',
        '--add-opens=java.base/java.nio=ALL-UNNAMED',
        '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
        '--add-opens=java.base/java.io=ALL-UNNAMED',
        '--module-path=${project.classpath}'
    ]
}
